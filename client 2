import socket

# Specify the port number and IP address to use
port = 53
ip = '127.0.0.1'

# Create a socket and bind it to the specified IP address and port number
with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as serverSocket:
    serverSocket.bind((ip, port))
    print("Server is listening...")

    # Define a dictionary to store DNS mappings
    dns_mapping = {
        'www.example.com': {'A': '192.168.113.62', 'CNAME': 'example.com'},
        'www.google.com': {'A': '172.217.6.238', 'CNAME': 'google.com'},
        'www.spotify.com': {'A': '35.186.224.25', 'CNAME': 'spotify.com'},
        'www.facebook.com': {'A': '69.63.176.13', 'CNAME': 'facebook.com'},
        'www.youtube.com': {'A': '208.65.153.238', 'CNAME': 'youtube.com'}
    }

    while True:
        # Receive the query and address from the client
        query, address = serverSocket.recvfrom(2048)
        query = query.decode()

        # Check if the query exists in the DNS mapping
        if query in dns_mapping:
            # If the query exists, get the corresponding IP address and CNAME from the dictionary
            ADDRESS = dns_mapping[query]["A"]
            CNAME = dns_mapping[query]["CNAME"]

            # Create a message to indicate the response
            message = f"{query} request \nDirected To address - {ADDRESS} & CNAME - \"{CNAME}\""
        else:
            # If the query is not in the dictionary, send an error message to the client
            message = f"The DNS query '{query}' does not exist"

        # Print the message to the console
        print(message)

        # Send the response message to the client
        serverSocket.sendto(message.encode(), address)
